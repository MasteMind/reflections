Q> When would you want to create a remote repository rather than keeping all your work local?
				When there is a group of more than one person, working on the same project but on the different aspects. Another case can be when the project is an open-source one and I wish to get contribution from other programmers all over the globe.
Q> Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
				Because, at times there might be some changes that aren't made by me or there might be some changes that I have made in the local repository that i havent committed yet. IN those cases, automatic pulling might make me loose important changes.

Q> Describe the differences between forks, clones and branches. When would you use one instead of another?
				Fork is used when we need to clone someone else's repository and wish to continue working on it ourselves. Clone is used when we desire to make a copy of any repository from git hub to our local computer, or vice-versa. Branching is used in the cases where the project is to be divided and further continue into two different phases or by two different contributors.
Q> What is the benefit of having a copy of the last known state of the remote stored locally?
				By storing the last known state of the remote locally we can know if someone else appended something to the same branch. We can keep track of all the changes made and then keep or deiscard them according to our requirement.
Q> How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
				Without using Git or GitHub, I would have to collaborate manually, by distributing the files and then, collecting them once the programmer has made some changes and wants to include them into the master branch. It will definitely be a lot harder than using Git or GitHub.
Q> When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?
				I would want to make changes in a separate branch when there are more than one people are collaborating or working on the same project. This way we both can work freely and later at the time of merging keep the track of what clashes or similar updates have we done. This way a proper solution would be selected out of the two or more clashes. 
